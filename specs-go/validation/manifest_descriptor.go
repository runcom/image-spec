package validation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Validate validates this manifest descriptor
func (m *ManifestDescriptor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDigest(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMediaType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePlatform(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ManifestDescriptor) validateDigest(formats strfmt.Registry) error {

	return nil
}

func (m *ManifestDescriptor) validateMediaType(formats strfmt.Registry) error {

	return nil
}

func (m *ManifestDescriptor) validatePlatform(formats strfmt.Registry) error {

	if err := validate.Required("platform", "body", m.Platform); err != nil {
		return err
	}

	if m.Platform != nil {

		if err := m.Platform.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ManifestDescriptor) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

// Validate validates this manifest descriptor platform
func (m *ManifestDescriptorPlatform) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateArchitecture(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateFeatures(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOs(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOsFeatures(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ManifestDescriptorPlatform) validateArchitecture(formats strfmt.Registry) error {

	if err := validate.Required("platform"+"."+"architecture", "body", m.Architecture); err != nil {
		return err
	}

	return nil
}

func (m *ManifestDescriptorPlatform) validateFeatures(formats strfmt.Registry) error {

	if swag.IsZero(m.Features) { // not required
		return nil
	}

	return nil
}

func (m *ManifestDescriptorPlatform) validateOs(formats strfmt.Registry) error {

	if err := validate.Required("platform"+"."+"os", "body", m.Os); err != nil {
		return err
	}

	return nil
}

func (m *ManifestDescriptorPlatform) validateOsFeatures(formats strfmt.Registry) error {

	if swag.IsZero(m.OsFeatures) { // not required
		return nil
	}

	return nil
}
